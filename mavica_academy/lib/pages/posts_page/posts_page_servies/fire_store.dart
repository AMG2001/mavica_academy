import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/material.dart';
class PostsPageFireStore {
  /**
   * collection to retrieve all data about posts and used when adding new post
   */
  CollectionReference postsCollection =
      FirebaseFirestore.instance.collection('posts');
      /**
       * collection used to store last post index and increament with adding new post
       */
        CollectionReference lastPostIndexCollection =
      FirebaseFirestore.instance.collection('posts_index');
      /**
       * All these data variables are retrieved from firestore and used in posts page
       */
  late int _currentLikes;
  late int _currentLoves;
  late int _currentDislike;
  late String documentId;
  /**
   * Adding new Post
   */
  Future<void> addPost(
      {/**
        * input come from bottomSheet
        */
        required postTitle,
        /**
         * input come from bottomSheet
         */
      required String postDescription,
      /**
       * Auto generated by login
       */
      required String userImageUrl,
      /**
       * Auto generated from "last_post" collection from firestore
       */
      required int postsIndex,
     }) async {
      /**
       * call posts collection to add in :
       */
    await postsCollection.add({
      'post_title': postTitle, // John Doe
      'post_description': postDescription, // Stokes and Sons
      'user_image': userImageUrl,
      "likes": 0,
      "love": 0,
      "dislike": 0,
      "posts_index": postsIndex,
    }).then((value) {
      print("Post Added");
      documentId = value.id;
    }).catchError((error) => print("Failed to add post : $error"));
  }

/**
 * to increament post likse :
 */
  Future<void> increamentLike() async {
    /**
     * get all post documentSnapshot from fireStore
     */
    DocumentSnapshot postInfo = await postsCollection.doc(documentId).get();
    /**
     * Access current likes from DocumentSnapshot data 
     */
    _currentLikes = (postInfo.data() as Map)['likes'];
    /**
     * increament the value 
     */
    _currentLikes++;
    /**
     * then update post data again 
     */
    postsCollection.doc(documentId).update({
      'likes': _currentLikes,
    });
  }

  Future<void> increamentLove() async {
    /**
     * get all post documentSnapshot from fireStore
     */
    DocumentSnapshot postInfo = await postsCollection.doc(documentId).get();
     /**
     * Access current love from DocumentSnapshot data 
     */
    _currentLoves = (postInfo.data() as Map)['love'];
    /**
     * increament the value 
     */
    _currentLoves++;
    /**
     * then update post data again 
     */
    postsCollection.doc(documentId).update({
      'loves': _currentLoves,
    });
  }

  Future<void> increamentDislike() async {
    /**
     * get all post documentSnapshot from fireStore
     */
    DocumentSnapshot postInfo = await postsCollection.doc(documentId).get();
    /**
     * Access current love from DocumentSnapshot data 
     */
    _currentDislike = (postInfo.data() as Map)['dislike'];
    /**
     * increament the value 
     */
    _currentDislike++;
    /**
     * then update post data again 
     */
    postsCollection.doc(documentId).update({
      'dislike': _currentDislike,
    });
  }
}
